=pod

=head1 NAME

Web::Starch::Store::AmazonDynamoDB - Session storage backend using Amazon::DynamoDB.

=head1 SYNOPSIS

    my $starch = Web::Starch->new(
        store => {
            class => '::AmazonDynamoDB',
            implementation => 'Amazon::DynamoDB::LWP',
            version        => '20120810',
            
            access_key   => 'access_key',
            secret_key   => 'secret_key',
            # or you specify to use an IAM role
            use_iam_role => 1,
            
            host  => 'dynamodb.us-east-1.amazonaws.com',
            scope => 'us-east-1/dynamodb/aws4_request',
            ssl   => 1,
        },
    );

=head1 DESCRIPTION

This Starch store uses L<Amazon::DynamoDB> to set and get session data.

=head1 CONSTRUCTOR

The arguments to this class are automatically shifted into the
L</dynamodb> argument if the L</dynamodb> argument is not specified. So,

    store => {
        class          => '::AmazonDynamoDB',
        implementation => 'Amazon::DynamoDB::LWP',
        version        => '20120810',
    },

Is the same as:

    store => {
        class  => '::AmazonDynamoDB',
        dynamodb => {
            implementation => 'Amazon::DynamoDB::LWP',
            version        => '20120810',
        },
    },

Also, don't forget about method proxies which allow you to build
the L<Amazon::DynamoDB> object using your own code but still specify a static
configuration.  The below is equivelent to the previous two examples:

    package MyDynamoDB;
    sub get_dynamodb {
        my ($class) = @_;
        return Amazon::DynamoDB->new(
            implementation => 'Amazon::DynamoDB::LWP',
            version        => '20120810',
        );
    }

    store => {
        class  => '::AmazonDynamoDB',
        chi => [ '&proxy', 'MyDynamoDB', 'get_dynamodb' ],
    },

You can read more about method proxies at
L<Web::Starch::Manual/METHOD PROXIES>.

=head1 REQUIRED ARGUMENTS

=head2 dynamodb

This must be set to either hash ref arguments for L<Amazon::DynamoDB> or a
pre-built object (often retrieved using a method proxy).

When configuring Starch from static configuration files using a
method proxy is a good way to link your existing L<Amazon::DynamoDB>
object constructor in with Starch so that starch doesn't build its own.

=head1 OPTIONAL ARGUMENTS

=head2 session_table

The DynamoDB table name where sessions are stored.
Defaults to C<sessions>.

=head2 id_field

The field in the L</session_table> where the session ID is stored.
Defaults to C<id>.

=head2 expiration_field

The field in the L</session_table> which will hold the epoch
time when the session should be expired.
Defaults to C<expiration>.

=head1 STORE METHODS

See L<Web::Starch::Store> for more documentation about the methods
which all stores implement.

=head1 AUTHOR

Aran Clary Deltac <bluefeetE<64>gmail.com>

=head1 ACKNOWLEDGEMENTS

Thanks to L<ZipRecruiter|https://www.ziprecruiter.com/>
for encouraging their employees to contribute back to the open
source ecosystem.  Without their dedication to quality software
development this distribution would not exist.

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
